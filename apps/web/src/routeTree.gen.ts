/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodosImport } from './routes/todos'
import { Route as LoginImport } from './routes/login'
import { Route as HabitsImport } from './routes/habits'
import { Route as CheckhealthImport } from './routes/checkhealth'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TodosRoute = TodosImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HabitsRoute = HabitsImport.update({
  id: '/habits',
  path: '/habits',
  getParentRoute: () => rootRoute,
} as any)

const CheckhealthRoute = CheckhealthImport.update({
  id: '/checkhealth',
  path: '/checkhealth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/checkhealth': {
      id: '/checkhealth'
      path: '/checkhealth'
      fullPath: '/checkhealth'
      preLoaderRoute: typeof CheckhealthImport
      parentRoute: typeof rootRoute
    }
    '/habits': {
      id: '/habits'
      path: '/habits'
      fullPath: '/habits'
      preLoaderRoute: typeof HabitsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/checkhealth': typeof CheckhealthRoute
  '/habits': typeof HabitsRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/checkhealth': typeof CheckhealthRoute
  '/habits': typeof HabitsRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/checkhealth': typeof CheckhealthRoute
  '/habits': typeof HabitsRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/checkhealth' | '/habits' | '/login' | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/checkhealth' | '/habits' | '/login' | '/todos'
  id: '__root__' | '/' | '/checkhealth' | '/habits' | '/login' | '/todos'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CheckhealthRoute: typeof CheckhealthRoute
  HabitsRoute: typeof HabitsRoute
  LoginRoute: typeof LoginRoute
  TodosRoute: typeof TodosRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CheckhealthRoute: CheckhealthRoute,
  HabitsRoute: HabitsRoute,
  LoginRoute: LoginRoute,
  TodosRoute: TodosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/checkhealth",
        "/habits",
        "/login",
        "/todos"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/checkhealth": {
      "filePath": "checkhealth.tsx"
    },
    "/habits": {
      "filePath": "habits.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/todos": {
      "filePath": "todos.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
